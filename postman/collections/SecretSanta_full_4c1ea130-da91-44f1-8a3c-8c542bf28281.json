{
	"info": {
		"_postman_id": "7437d3fe-633a-4a51-bf06-b7eadfe34d3c",
		"name": "SecretSanta_full",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register new user (successful)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "243fd21a-68e5-4558-8265-5e97bab3a0ba",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    //pm.expect(pm.response.header.text()).to.include(\"connect.sid\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "6f398055-21d0-40ba-aec6-7b632309f446",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Mary\",\n    \"email\": \"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/register",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register new user (unsuccessful - using registered email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f76d9ff6-a010-4986-b2a4-9b666b92f553",
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"USER_ALREADY_EXISTS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8419d34b-2d53-460a-bda4-e81812ed0573",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Mary\",\n    \"email\": \"shevtma@yandex.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/register",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register new user (unsuccessful - using invalid email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9fa9abf4-9c82-4692-9681-6ab469ae71b3",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "99aeee77-4f19-48ae-8aea-f4e0579ae01d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Mary\",\n    \"email\": \"shevtma_yandex.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/register",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login not authorised",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "355f4224-abbd-41cc-9fbb-04c2c2aaeeff",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Test that error is NotFoundError\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error.name).to.eql(\"NotFoundError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "322ba55e-7c1f-41ec-9390-12a6030a1985",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@mail.ru\",\n    \"password\":\"shevtma\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login empty params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e483bff8-fed8-44cc-9220-cf400d51b5f4",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Test that error is ValidationError\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error.name).to.eql(\"ValidationError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "bf55e457-e249-45ad-b89d-37b1040f230c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\" \",\n    \"password\":\" \"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user without password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4820a6e3-63ba-4727-8122-9262ef5909b4",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"pm.test(\"Body matches string ValidationError\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "6a36f4dc-f05f-475e-90d3-236906158290",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user with correct data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b8b053aa-f61b-4469-8ae9-c54671c7fab7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking registered user information\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.accountType).to.eql(\"email\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "18d96fdf-5971-4c99-83d2-0454546ca6d6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\",\n    \"password\":\"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user with incorrect password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3298c4ee-7697-431f-8a64-2584bb61ead4",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"INVALID_USERNAME_OR_PASSWORD\");",
							"});",
							"pm.test(\"Expected code of POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "927a6bd3-5777-4e99-a805-819dd7d4dc43",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\",\n    \"password\":\"ZU9599\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user with incorrect email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b52549ea-18ca-44e0-866c-273b19d039d7",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});",
							"pm.test(\"Expected code of POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b08c1e81-7739-4c54-bef6-d4b606398760",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma_yandex.ru\",\n    \"password\":\"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password (happy path)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb62efe9-b549-49e1-abdc-83e61dfa6eeb",
						"exec": [
							"pm.test(\"Status code is 200\",  () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking user properties\",  () => {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.isVerified).is.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "53b3c2ae-8a9a-4634-8e58-3f56642bb4ee",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"newpassword\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password (sad path - empty password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d9e402b7-4c94-48d2-918b-3537522d08a9",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Test that we have a vaidation error\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "bd7fdf99-ab72-4339-833e-407671f2b529",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password (sad path - short password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "163d386f-a727-42bd-8f21-4a9440343dc5",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Checking password for a minimum length of 6 symbols\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"validations.minCharLength\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "752b8747-f318-43b6-9644-a8b741f4d145",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password for unauthorized (sad path)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb62efe9-b549-49e1-abdc-83e61dfa6eeb",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Test for an Unauthorized error\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Unauthorized\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ec3d7768-30ab-497c-9f85-4de903e435cf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disableCookies": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "connect.sid=s%3ArOs1AqSXV48KZG2rMhr74vFlRYKjN0iS.CHi0gGmRcLLKRBZLk2xAAMNR23wGAiUG37CB3V7FuiU; Path=/; HttpOnly; Expires=Tue, 27 Dec 2022 14:51:09 GMT;",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set another new password (happy path)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb62efe9-b549-49e1-abdc-83e61dfa6eeb",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking user properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.isVerified).is.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "88ef473f-29d1-4583-9521-e3f44f3f7a90",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user boxes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b319c47-3c10-4f64-9b44-1d5fbfa43383",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "56b7cf98-0cdf-4477-808e-a90d85d0f7b2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/account/boxes?Cookie={{connectionCookie}}",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"boxes"
					],
					"query": [
						{
							"key": "Cookie",
							"value": "{{connectionCookie}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca7dc1ea-be07-452c-8558-701cc28a3250",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"aBoxKey\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c5f0d70c-ec62-4e87-8fda-a286dac177d5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/box/key",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABox with params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bdfec85-18b7-4490-bf0f-40160a2badaa",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "fdfd9a96-d2e9-49c5-a3b3-a97988c48d93",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": \"{{cashLimit}}\",\n    \"cashLimitCurrency\": \"{{cashLimitCurrency}}\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": {{isCreated}},\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": {{isPhoneRequired}},\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"{{name}}\",\n    \"picture\": \"{{picture}}\",\n    \"useCashLimit\": {{useCashLimit}},\n    \"useCircleDraw\": null,\n    \"useNames\": {{useNames}},\n    \"usePost\": {{usePost}},\n    \"useWish\": {{useWish}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABoxDublicate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bdfec85-18b7-4490-bf0f-40160a2badaa",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "cfe8607c-5c70-4a3f-ba95-a17f0d43ac24",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 99,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": false,\n    \"key\": \"lAhxj0\",\n    \"logo\": null,\n    \"name\": \"DublicateBox\",\n    \"picture\": \"any_picture\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": false,\n    \"usePost\": false,\n    \"useWish\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca7dc1ea-be07-452c-8558-701cc28a3250",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"aBoxKey\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b08c2d4a-c985-457d-ab91-6dcc48c1ba8b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/box/key",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bdfec85-18b7-4490-bf0f-40160a2badaa",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7efe0aed-53be-43b4-9735-ffa82a6cd851",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 1,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": false,\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"SomeBoxToEdit\",\n    \"picture\": \"mittens\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": false,\n    \"usePost\": false,\n    \"useWish\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "EditABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bdfec85-18b7-4490-bf0f-40160a2badaa",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "fd09cd27-038c-4ee1-94eb-64677e4c6fa0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 198,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": true,\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"SomeBoxToEdit\",\n    \"picture\": \"mittens\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": true,\n    \"usePost\": true,\n    \"useWish\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca7dc1ea-be07-452c-8558-701cc28a3250",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"aBoxKey\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "48de2e02-da7d-499f-88cd-a373918ab10b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/box/key",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bdfec85-18b7-4490-bf0f-40160a2badaa",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9be74e3a-af21-4df5-908a-acc98a40997f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 1,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": false,\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"AboxToBeDeleted\",\n    \"picture\": \"mittens\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": false,\n    \"usePost\": false,\n    \"useWish\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bdfec85-18b7-4490-bf0f-40160a2badaa",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "04b2dadb-c94f-4f82-9d57-36d75bc98734",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box/{{aBoxKey}}",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"{{aBoxKey}}"
					]
				}
			},
			"response": []
		}
	]
}