{
	"info": {
		"_postman_id": "9a925c2d-e508-4b3a-8d52-bbfabc58e299",
		"name": "SecretSanta_full",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register new user (successful)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3abbf960-8c24-421c-b5e1-fd16370ec707",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    //pm.expect(pm.response.header.text()).to.include(\"connect.sid\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "4d6e803b-f90a-47fc-a009-8a2e2536f2a8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Mary\",\n    \"email\": \"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/register",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register new user (unsuccessful - using registered email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37ce444a-f625-4d3e-8edd-3499ceb02116",
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"USER_ALREADY_EXISTS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f36758fe-b39b-4b49-9501-0c3ced905ac2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Mary\",\n    \"email\": \"shevtma@yandex.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/register",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register new user (unsuccessful - using invalid email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "839ce890-920f-44ee-94f5-65b786b28852",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "86960fe8-e43a-4d32-9ac9-4ee00f3bdcc1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Mary\",\n    \"email\": \"shevtma_yandex.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/register",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login not authorised",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "05bb1c8b-3bc2-4abe-9a51-28f3d9bd56d2",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Test that error is NotFoundError\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error.name).to.eql(\"NotFoundError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "939e82de-ecaa-4860-8840-fca376fb7e88",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@mail.ru\",\n    \"password\":\"shevtma\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login empty params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bcf4fc0e-5fda-440e-a748-2886a519585e",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Test that error is ValidationError\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error.name).to.eql(\"ValidationError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "355c9ea2-3f08-4fad-9258-87bbbef19a09",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\" \",\n    \"password\":\" \"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user without password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "564f1c74-688c-4b1e-8966-848550637cb2",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"pm.test(\"Body matches string ValidationError\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5a641cca-5f44-4b32-abfe-81558977af47",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user with correct data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc6014af-1375-4735-b27d-0eca0130e02f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking registered user information\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.accountType).to.eql(\"email\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9665823f-b967-410f-b2d4-6188787fad8b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\",\n    \"password\":\"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user with incorrect password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d409d51-927e-4f9a-9838-69f3aa90ad94",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"INVALID_USERNAME_OR_PASSWORD\");",
							"});",
							"pm.test(\"Expected code of POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "a57cb23c-ef96-4bc0-8b1a-7691d2a9452f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\",\n    \"password\":\"ZU9599\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user with incorrect email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc67dee6-4a3a-4f71-b2cf-d6f611ce5509",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});",
							"pm.test(\"Expected code of POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5646f136-0550-4dd2-9550-40c425c7fbfc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma_yandex.ru\",\n    \"password\":\"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login correct user with correct data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc6014af-1375-4735-b27d-0eca0130e02f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking registered user information\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.accountType).to.eql(\"email\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9e6375ce-f3fb-478a-a2b7-1f9b3ad776f7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"shevtma@yandex.ru\",\n    \"password\":\"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/login",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password (happy path)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "433b3e8d-f35a-4f56-9f56-67a47006eb78",
						"exec": [
							"pm.test(\"Status code is 200\",  () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking user properties\",  () => {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.isVerified).is.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "e807edd8-f57f-4fde-82bf-f995bbcb4a51",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"newpassword\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password (sad path - empty password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "200634e1-e38a-4f56-ba7f-3983754bcac5",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Test that we have a vaidation error\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ValidationError\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3ada94a9-e482-4dd5-9801-3798aaf7dc4d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password (sad path - short password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "54857d5e-3679-4840-96ec-0b6083b6ca5e",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Checking password for a minimum length of 6 symbols\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"validations.minCharLength\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "05ab6829-cb49-4886-8126-4dbf0d6eb74b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set new password for unauthorized (sad path)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a685074b-da71-45a1-af8d-06d9e8351a38",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Test for an Unauthorized error\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Unauthorized\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "565a508a-6539-47d9-83f0-7f83c595f712",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disableCookies": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "connect.sid=s%3ArOs1AqSXV48KZG2rMhr74vFlRYKjN0iS.CHi0gGmRcLLKRBZLk2xAAMNR23wGAiUG37CB3V7FuiU; Path=/; HttpOnly; Expires=Tue, 27 Dec 2022 14:51:09 GMT;",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set another new password (happy path)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4bff247d-414c-42d1-b672-dd651115ebe9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking user properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(3000027);",
							"    pm.expect(jsonData.email).to.eql(\"shevtma@yandex.ru\");",
							"    pm.expect(jsonData.username).to.eql(\"Maria\");",
							"    pm.expect(jsonData.isVerified).is.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b3c92741-598a-48fa-a357-4cc31ff0d724",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\" : \"ZU9590\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/account/password",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get session",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62bb75e7-2e88-4137-879f-ac1f74ef1620",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b599ed37-711d-48f8-a126-aea5c0fe6090",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/session",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user boxes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62bb75e7-2e88-4137-879f-ac1f74ef1620",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "28e9fd72-5daa-411f-862c-5ab0d71d56da",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/account/boxes?Cookie={{connectionCookie}}",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"account",
						"boxes"
					],
					"query": [
						{
							"key": "Cookie",
							"value": "{{connectionCookie}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a507c09-6af0-405d-b800-36d611b8a11d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"aBoxKey\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "82b6991d-bd49-46ab-ac7f-c6d07cb1374d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/box/key",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABox with params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad69a0b3-cbe3-4cb2-8efa-9cd67c097b5e",
						"exec": [
							"var requestData = JSON.parse(pm.request.body.raw);",
							"var boxName = requestData.name;",
							"var positiveCaseBoxName = [\"boxName1\", \"boxName4\", \"boxName17\", \"boxName18\"];",
							"",
							"if (positiveCaseBoxName.includes(boxName) === true) {",
							"    ",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"",
							"    pm.test(\"Test the response structure\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.box).is.not.null;",
							"        pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"        ",
							"    });",
							"",
							"} else {",
							"",
							"    pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    })",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c8d8d2ee-a8f0-427e-a7d0-a90e12c216cf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": \"{{cashLimit}}\",\n    \"cashLimitCurrency\": \"{{cashLimitCurrency}}\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": {{isCreated}},\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": {{isPhoneRequired}},\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"{{name}}\",\n    \"picture\": \"{{picture}}\",\n    \"useCashLimit\": {{useCashLimit}},\n    \"useCircleDraw\": null,\n    \"useNames\": {{useNames}},\n    \"usePost\": {{usePost}},\n    \"useWish\": {{useWish}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABoxDublicate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8b5dd95-8440-4d3b-a70a-8802dcb66fa8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c67ba83d-6d02-49c5-97fc-23761f4f950d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 99,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": false,\n    \"key\": \"lAhxj0\",\n    \"logo\": null,\n    \"name\": \"DublicateBox\",\n    \"picture\": \"any_picture\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": false,\n    \"usePost\": false,\n    \"useWish\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "637328aa-2a20-495e-a94a-a484c9f39054",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"aBoxKey\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ad476887-f769-4271-adb2-2b2ef57c7b8e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/box/key",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d1e3db0-811c-4076-89e7-c5599bcc7da5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8f9caabf-feed-4385-9993-5f1500a0ad6f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 1,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": false,\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"SomeBoxToEdit\",\n    \"picture\": \"mittens\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": false,\n    \"usePost\": false,\n    \"useWish\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "EditABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d8275337-9cfa-4be5-95bc-2432ee896dcc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "77970155-e19f-496f-80e4-d8c2ac515e54",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 198,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": true,\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"SomeBoxToEdit\",\n    \"picture\": \"mittens\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": true,\n    \"usePost\": true,\n    \"useWish\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a30c3bca-e72c-40d4-8651-3f8215f0abb1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"aBoxKey\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9f19f96d-c28d-4ed0-8627-9432395043db",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{secretSantaURL}}/box/key",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9f27661-0cdc-419e-8e66-bc3c52127224",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//const response = pm.response.json();",
							"pm.test(\"Test the response structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.box).is.not.null;",
							"    pm.expect(jsonData.admin.email).equals(pm.globals.get(\"userName\"));",
							"    pm.globals.set(\"aBoxinviteKey\", jsonData.box.inviteKey);",
							"    pm.globals.set(\"aBoxinviteLink\", jsonData.inviteLink);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b5e38b31-4656-4773-87ea-78d4cbe183a8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cashLimit\": 1,\n    \"cashLimitCurrency\": \"rub\",\n    \"createAdminCard\": null,\n    \"email\": null,\n    \"isArchived\": null,\n    \"isCreated\": true,\n    \"isInviteAfterDraw\": null,\n    \"isPhoneRequired\": false,\n    \"key\": \"{{aBoxKey}}\",\n    \"logo\": null,\n    \"name\": \"AboxToBeDeleted\",\n    \"picture\": \"mittens\",\n    \"useCashLimit\": true,\n    \"useCircleDraw\": null,\n    \"useNames\": false,\n    \"usePost\": false,\n    \"useWish\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteABox",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce902393-0382-491f-86a3-e4de98bdd0fc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5b7882d1-d0be-4674-9856-0a4d031a6d60",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{secretSantaURL}}/box/{{aBoxKey}}",
					"host": [
						"{{secretSantaURL}}"
					],
					"path": [
						"box",
						"{{aBoxKey}}"
					]
				}
			},
			"response": []
		}
	]
}